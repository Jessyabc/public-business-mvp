/**
 * Glass & Visual Effects
 * 
 * Import this module in components that need glass morphism effects.
 * These styles depend on CSS variables hydrated by ThemeInjector.
 */

/* ========== Glass Filter Sprite ========== */
/* Mount once in root layout for SVG displacement filters */
.glass-filter-sprite {
  position: absolute;
  width: 0;
  height: 0;
  pointer-events: none;
}

/* ========== Glass Surfaces ========== */
.glass-surface,
.glass-button {
  --glass-layer-bg: var(--glass-fill);
  --glass-layer-border: var(--glass-border);
  --glass-layer-shadow: var(--shadow-md);
  --glass-layer-blur: calc(var(--glass-blur) * 0.55);
  position: relative;
  isolation: isolate;
  color: var(--text-ink);
  background: var(--glass-layer-bg);
  border: 1px solid var(--glass-layer-border);
  box-shadow: var(--glass-layer-shadow);
  background-clip: padding-box;
  transition:
    background var(--t-fast) var(--ease),
    border-color var(--t-fast) var(--ease),
    box-shadow var(--t-fast) var(--ease);
}

.glass-surface {
  --glass-layer-shadow: var(--shadow-md);
  border-radius: calc(var(--radius) - 6px);
}

.glass-button {
  --glass-layer-shadow: var(--shadow-md);
  --glass-layer-blur: calc(var(--glass-blur) * 0.45);
}

/* Enhanced opacity with color-mix support */
@supports (background: color-mix(in srgb, transparent, transparent)) {
  .glass-surface {
    --glass-layer-bg: color-mix(in srgb, var(--glass-fill) 84%, transparent);
    --glass-layer-border: color-mix(in srgb, var(--glass-border) 72%, transparent);
  }

  .glass-button {
    --glass-layer-bg: color-mix(in srgb, var(--glass-fill) 70%, transparent);
    --glass-layer-border: color-mix(in srgb, var(--glass-border) 66%, transparent);
  }
}

/* Backdrop blur for modern browsers */
@supports (backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px)) {
  .glass-surface,
  .glass-button {
    -webkit-backdrop-filter: blur(var(--glass-layer-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
    backdrop-filter: blur(var(--glass-layer-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
  }
}

/* Interactive states */
.glass-button:hover,
.glass-button:focus-visible {
  box-shadow: var(--shadow-lg);
}

.glass-button:focus-visible {
  outline: none;
  position: relative;
}

.glass-button:focus-visible::after {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: inherit;
  border: 2px solid var(--glass-border);
  pointer-events: none;
}

@supports (background: color-mix(in srgb, transparent, transparent)) {
  .glass-button:focus-visible::after {
    border: 2px solid color-mix(in srgb, var(--glass-border) 55%, transparent);
  }
}

/* Dark canvas overrides */
body[data-bg="dark"] .glass-surface,
body[data-bg="dark"] .glass-button {
  color: var(--text-ink-d);
  box-shadow: var(--shadow-lg);
}

/* ========== Glass Cards ========== */
.glass-card {
  position: relative;
  border-radius: var(--radius);
  background: var(--glass-fill);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-md);
  overflow: clip;
  isolation: isolate;
  transform: translateZ(0);
  color: var(--text-ink);
}

@supports (backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px)) {
  .glass-card {
    -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
    backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
  }
}

/* Refraction/distortion layer */
.glass-card::before {
  content: "";
  position: absolute;
  inset: 0;
  background: inherit;
  background-attachment: fixed;
  filter: blur(var(--glass-refraction-blur)) url(#glass-displace);
  transform: scale(1.02);
  pointer-events: none;
  -webkit-mask-image: radial-gradient(120% 100% at 50% 40%, rgba(0, 0, 0, .95), rgba(0, 0, 0, .2) 65%, transparent 100%);
  mask-image: radial-gradient(120% 100% at 50% 40%, rgba(0, 0, 0, .95), rgba(0, 0, 0, .2) 65%, transparent 100%);
}

/* Content scrim for readability */
.glass-card .scrim {
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, rgba(255, 255, 255, .35), rgba(255, 255, 255, .18));
  pointer-events: none;
  z-index: 1;
}

.glass-card > * {
  position: relative;
  z-index: 2;
}

.glass-card:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-1px);
  transition: transform var(--t-fast) var(--ease), box-shadow var(--t-fast) var(--ease);
}

body[data-bg="dark"] .glass-card {
  color: var(--text-ink-d);
  box-shadow: var(--shadow-lg);
}

/* ========== Business Mode Glass Cards ========== */
.glass-business-card {
  position: relative;
  border-radius: var(--radius);
  background: var(--glass-fill);
  border: 1px solid var(--glass-border);
  box-shadow: var(--shadow-md);
  overflow: clip;
  isolation: isolate;
  transform: translateZ(0);
  color: var(--text-ink);
}

@supports (backdrop-filter: blur(1px)) or (-webkit-backdrop-filter: blur(1px)) {
  .glass-business-card {
    -webkit-backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
    backdrop-filter: blur(var(--glass-blur)) saturate(var(--glass-vibrancy)) brightness(var(--glass-bright));
  }
}

.glass-business-card::before {
  content: "";
  position: absolute;
  inset: 0;
  background: inherit;
  background-attachment: fixed;
  filter: blur(var(--glass-refraction-blur)) url(#glass-displace);
  transform: scale(1.02);
  pointer-events: none;
  -webkit-mask-image: radial-gradient(120% 100% at 50% 40%, rgba(0, 0, 0, .95), rgba(0, 0, 0, .2) 65%, transparent 100%);
  mask-image: radial-gradient(120% 100% at 50% 40%, rgba(0, 0, 0, .95), rgba(0, 0, 0, .2) 65%, transparent 100%);
}

.glass-business-card .scrim {
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, rgba(255, 255, 255, .35), rgba(255, 255, 255, .18));
  pointer-events: none;
  z-index: 1;
}

.glass-business-card > * {
  position: relative;
  z-index: 2;
}

.glass-business-card:hover {
  box-shadow: var(--shadow-lg);
  transform: translateY(-1px);
  transition: transform var(--t-fast) var(--ease), box-shadow var(--t-fast) var(--ease);
}

body[data-bg="dark"] .glass-business-card {
  color: var(--text-ink-d);
  box-shadow: var(--shadow-lg);
}

/* ========== Dock Positioning ========== */
.pb-dock {
  position: fixed;
  left: 50%;
  bottom: max(12px, env(safe-area-inset-bottom));
  transform: translateX(-50%);
  height: var(--dock-h);
  z-index: 50;
}

.pb-dock-safe {
  padding-bottom: calc(var(--dock-h) + max(var(--dock-gap), env(safe-area-inset-bottom)));
}
